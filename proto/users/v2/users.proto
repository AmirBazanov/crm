syntax = "proto3";

package users.v2;

import "buf/validate/validate.proto";

// ENUM для стран
enum Country {
    COUNTRY_UNSPECIFIED = 0;
    COUNTRY_EN = 1;
    COUNTRY_IT = 2;
    COUNTRY_FR = 3;
    COUNTRY_DE = 4;
    COUNTRY_RU = 5;
}

// Сообщение User
message User {
    string id = 1 [(buf.validate.field).string.uuid=true];
    string firstname = 2 [(buf.validate.field).string.min_len=3];
    string lastname = 3 [(buf.validate.field).string.min_len=3];
    string nickname = 4 [(buf.validate.field).string.min_len=3];
    string email = 5 [(buf.validate.field).string.email=true];
    Country country = 6 [(buf.validate.field).enum.example=1];
    string created_at = 7 ;
    string updated_at = 8;
}

// Запрос на создание
message CreateUserRequest {
    string firstname = 1[(buf.validate.field).string.min_len=3];
    string lastname = 2[(buf.validate.field).string.min_len=3];
    string nickname = 3[(buf.validate.field).string.min_len=3];
    string email = 4  [(buf.validate.field).string.email=true];
    string password = 5 ;
    Country country = 6 [(buf.validate.field).enum.example=1];
}

// Ответ на создание
message CreateUserResponse {
    string id = 1 [(buf.validate.field).string.uuid=true];
}

// Запрос на получение по ID
message GetUserRequest {
    string id = 1 [(buf.validate.field).string.uuid=true];
}

message GetUserResponse {
    User user = 1;
}

// Запрос на обновление
message UpdateUserRequest {
    string id = 1 [(buf.validate.field).string.uuid=true];
    string firstname = 2[(buf.validate.field).string.min_len=3];
    string lastname = 3[(buf.validate.field).string.min_len=3];
    string nickname = 4[(buf.validate.field).string.min_len=3];
    string email = 5[(buf.validate.field).string.email=true];
    Country country = 6[(buf.validate.field).enum.example=1];
}

message UpdateUserResponse {
    User user = 1;
}

// Запрос на удаление
message DeleteUserRequest {
    string id = 1[(buf.validate.field).string.uuid=true];
}

message DeleteUserResponse {
    string message = 1 [(buf.validate.field).string.min_len=1];
}

// Запрос на получение всех
message GetUsersRequest {

}

message GetUsersResponse {
    repeated User users = 1;
}

// Запрос на поиск
message SearchUsersRequest {
    optional string city = 1[(buf.validate.field).string.min_len=3];
    optional string nickname = 2[(buf.validate.field).string.min_len=3];
    optional string email = 3[(buf.validate.field).string.email=true];
    optional string firstname = 4[(buf.validate.field).string.min_len=3];
    optional string lastname = 5[(buf.validate.field).string.min_len=3];
}

message SearchUsersResponse {
    repeated User users = 1;
}

// gRPC-сервис
service UserService {
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
    rpc Search(SearchUsersRequest) returns (SearchUsersResponse);
}
