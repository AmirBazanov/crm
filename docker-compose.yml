version: '3.9'
services:
  gateway:
    build: ./gateway
    ports:
      - "3000:3000"
    depends_on:
      - auth
      - users
      - clients
    environment:
      - NODE_ENV=development

  auth:
    build: ./services/auth
    ports:
      - "4000:4000"
    environment:
      - JWT_SECRET=supersecret
      - DATABASE_URL=postgres://auth:auth@db:5432/auth
    depends_on:
      - db

  users:
    build: ./services/users
    ports:
      - "5000:5000"
    environment:
      - DB_URL=postgres://users:users@db:5432/users
    depends_on:
      - db

  clients:
    build: ./services/clients
    ports:
      - "5001:5001"
    environment:
      - DB_URL=postgres://clients:clients@db:5432/clients
    depends_on:
      - db

  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    environment:
      - REDIS_PASSWORD=redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
volumes:
  postgres_data:
